openapi: 3.0.0
info:
  title: ODFDS BackEnd API
  description: ODFDS BackEnd API
  version: 1.0.0
servers:
  - url: http://164.92.68.162:3000
    description: Remote Development Server
  - url: http://127.0.0.1:3000
    description: Local Development Server
tags:
- name: Restaurant
- name: Driver
- name: Common

paths:
  /restaurant/emailCode:
    get:
      description: Get an email verification code for creating a restaurant account
      tags:
      - Restaurant
      summary: Get an email code
      parameters:
      - in: query
        name: email
        schema: 
          type: string
        required: true
      responses:
        '200':
          description: Email code sent
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Code sent to your email, it will expire in 5 mins
        '400':
          description: Invalid email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid email address format:
                  value:
                    code: 400
                    data:
                      field: email
                      value: abc.com
                      message: Invalid email address
                Email address already taken:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Email is already taken, please try another email address
                Email code already sent:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Code is already sent, please try again after 5 mins
        '500':
          description: Can not send out email, server error
  /restaurant/token:
    post:
      description: Log in an restaurant account and receive a json web token
      tags:
      - Restaurant
      summary: Log in restaurant account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantLoginRequest'
      responses:
        '200':
          description: Login succeed, receive an json web toke
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid account:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.com
                      message: Invalid account
                Account not exist:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven@gmail.com
                      message: Account does not exist
                Invalid password:
                  value:
                    code: 400
                    data:
                      field: password
                      value: abc123
                      message: Invalid password
                Incorrect password:
                  value:
                    code: 400
                    data:
                      field: password
                      value: A1b2c3.
                      message: Incorrect password
  /restaurant:
    post:
      description: Sign up a new restaurant accout
      tags:
      - Restaurant
      summary: Sign up a new restaurant accout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantSignUpRequest'
      responses:
        '200':
          description: Sign up succeed, restaurant account data inserted to the database
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Restaurant account created successfully
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Email verification code expired:
                  value: 
                    code: 400
                    data:
                      field: code
                      value: 123456
                      message: Email verification code is expired, please try to request a new one
                Wrong Email verification code:
                  value: 
                    code: 400
                    data:
                      field: code
                      value: 123456
                      message: Email verification code is wrong, please try again
                Email address already taken:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Email is already taken, please try another email address
    delete:
      description: Delete a restaurant account (dev use)
      tags:
      - Restaurant
      summary: Delete a restaurant account (dev use)
      parameters:
      - in: query
        name: email
        schema:
          type: string
        required: true
      responses:
        '200':
          description: Succeed
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Restaurant account deleted
        '400':
          description: Fail
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid email address format:
                  value:
                    code: 400
                    data:
                      field: email
                      value: stevenxpan@yahoo.com
                      message: Restaurant account does not exist
  /restaurant/profile:
    get:
      description: Get a restaurant profile (basic information)
      tags:
      - Restaurant
      summary: Get a restaurant profile
      parameters:
      - in: header
        name: access_token
        schema:
          type: string
          description: restaurant access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        required: true
      responses:
        '200':
          description: return restaurant profile information
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRestaurantProfileResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              example:
                code: 401
                data: Please log in
    patch:
      description: Update restaurant account profile info
      tags:
      - Restaurant
      summary: Update restaurant accout profile
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
            description: restaurant access token
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRestaurantProfileRequest'
      responses:
        '200':
          description: Sign up succeed, restaurant account data inserted to the database
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Restaurant account created successfully
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid phone number:
                  value: 
                    code: 400
                    data:
                      field: phone
                      value: ABC
                      message: Invalid phone number
                Duplicated phone number:
                  value: 
                    code: 400
                    data:
                      field: phone
                      value: 4081234567
                      message: Phone number is already taken, please try another phone number
                # Invalid latitude or longitude:
                #   value:
                #     code: 400
                #     data:
                #       field: latitude
                #       value: ABC
                #       message: Invalid latitude
  /restaurant/reset/emailCode:
    get:
      description: Get an email verification code for reset password of a restaurant account
      tags:
      - Restaurant
      summary: Get an email code for reset password for a restaurant account
      parameters:
      - in: query
        name: email
        schema: 
          type: string
        required: true
      responses:
        '200':
          description: Email code sent
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Code sent to your email, it will expire in 5 mins
        '400':
          description: Invalid email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid email address format:
                  value:
                    code: 400
                    data:
                      field: email
                      value: abc.com
                      message: Invalid email address
                Restaurant account does not exist:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Restaurant account does not exist
                Email code already sent:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Code is already sent, please try again after 5 mins
        '500':
          description: Can not send out email, server error
  /restaurant/reset/password:
    patch:
      description: Reset restaurant account password
      tags:
      - Restaurant
      summary: Reset restaurant account password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reseted
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Succeed
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Email verification code expired:
                  value: 
                    code: 400
                    data:
                      field: code
                      value: 123456
                      message: Email verification code is expired, please try to request a new one
                Wrong Email verification code:
                  value: 
                    code: 400
                    data:
                      field: code
                      value: 123456
                      message: Email verification code is wrong, please try again
                Restaurant account does not exist:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Restaurant account does not exist
  /restaurant/orders:
    get:
      description: Get restaurant history orders
      tags:
      - Restaurant
      summary: Get restaurant history orders
      parameters:
      - in: header
        name: access_token
        schema:
          type: string
          description: restaurant access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        required: true
      - in: query
        name: pageSize
        description: number of items per page
        schema: 
          type: number
        required: true
        example: 10
      - in: query
        name: page
        description: current page number
        required: true
        schema:
          type: number
        example: 1
      responses:
        '200':
          description: return restaurant history orders information
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GetRestaurantOrdersResponse'
        '400':
          description: invalid parameters
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                  Invalid page number:
                    value:
                      code: 400
                      data:
                        field: page
                        value: abc
                        message: Invalid page number
                  Invalid page size:
                    value:
                      code: 400
                      data:
                        field: pageSize
                        value: abc
                        message: Invalid page size
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              example:
                code: 401
                data: Please log in
  /restaurant/order/estimate:
    post:
      description: get estimated distance and duration between restaurant and customer
      tags:
      - Restaurant
      summary: get estimated distance and duration
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
            description: restaurant access token
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantEstimateRequest'
      responses:
        '200':
          description: Succeed, received the estimated distance (in meters) and duration (in seconds)
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data:
                    estimatedDistanceInMeters: 1555
                    estimatedDurationInSeconds: 234
                    estimatedPriceInDollars: 22.86
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                No street:
                  value: 
                    code: 400
                    data:
                      field: street
                      value: null
                      message: Please input street
                No city:
                  value: 
                    code: 400
                    data:
                      field: city
                      value: null
                      message: Please input city
                No state:
                  value: 
                    code: 400
                    data:
                      field: state
                      value: null
                      message: Please input state
                No zipCode:
                  value: 
                    code: 400
                    data:
                      field: zipCode
                      value: null
                      message: Please input zip code
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              example:
                code: 401
                data: Please log in
  /restaurant/order:
    post:
      description: create a delivery order
      tags:
      - Restaurant
      summary: create a delivery order
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
            description: restaurant access token
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantCreateOrderRequest'
      responses:
        '200':
          description: Succeed, return order id
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data:
                    message: Order created
                    orderId: 1
  /driver/emailCode:
    get:
      description: Get an email verification code for creating a driver account
      tags:
      - Driver
      summary: Get an email code
      parameters:
      - in: query
        name: email
        schema: 
          type: string
        required: true
      responses:
        '200':
          description: Email code sent
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Code sent to your email, it will expire in 5 mins
        '400':
          description: Invalid email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid email address format:
                  value:
                    code: 400
                    data:
                      field: email
                      value: abc.com
                      message: Invalid email address
                Email address already taken:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Email is already taken, please try another email address
                Email code already sent:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Code is already sent, please try again after 5 mins
        '500':
          description: Can not send out email, server error
  /driver/token:
    post:
      description: Log in an driver account and receive a json web token
      tags:
      - Driver
      summary: Log in driver account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverLoginRequest'
      responses:
        '200':
          description: Login succeed, receive an json web toke
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid account:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.com
                      message: Invalid account
                Account not exist:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven@gmail.com
                      message: Account does not exist
                Invalid password:
                  value:
                    code: 400
                    data:
                      field: password
                      value: abc123
                      message: Invalid password
                Incorrect password:
                  value:
                    code: 400
                    data:
                      field: password
                      value: A1b2c3.
                      message: Incorrect password
  /driver:
    post:
      description: Sign up a new driver accout
      tags:
      - Driver
      summary: Sign up a new driver accout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverSignUpRequest'
      responses:
        '200':
          description: Sign up succeed, restaurant account data inserted to the database
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Restaurant account created successfully
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Email verification code expired:
                  value: 
                    code: 400
                    data:
                      field: code
                      value: 123456
                      message: Email verification code is expired, please try to request a new one
                Wrong Email verification code:
                  value: 
                    code: 400
                    data:
                      field: code
                      value: 123456
                      message: Email verification code is wrong, please try again
                Email address already taken:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Email is already taken, please try another email address
    delete:
      description: Delete a driver account (dev use)
      tags:
      - Driver
      summary: Delete a driver account (dev use)
      parameters:
      - in: query
        name: email
        schema:
          type: string
        required: true
      responses:
        '200':
          description: Succeed
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Driver account deleted
        '400':
          description: Fail
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid email address format:
                  value:
                    code: 400
                    data:
                      field: email
                      value: stevenxpan@yahoo.com
                      message: Driver account does not exist
  /driver/profile:
    get:
      description: Get a driver profile (basic information)
      tags:
      - Driver
      summary: Get a driver profile
      parameters:
      - in: header
        name: access_token
        schema:
          type: string
          description: driver access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        required: true
      responses:
        '200':
          description: return driver profile information
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GetDriverProfileResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              example:
                code: 401
                data: Please log in
    patch:
      description: Update driver account profile info
      tags:
      - Driver
      summary: Update driver accout profile
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
            description: restaurant access token
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDriverProfileRequest'
      responses:
        '200':
          description: Sign up succeed, restaurant account data inserted to the database
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Restaurant account created successfully
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid phone number:
                  value: 
                    code: 400
                    data:
                      field: phone
                      value: ABC
                      message: Invalid phone number
                Duplicated phone number:
                  value: 
                    code: 400
                    data:
                      field: phone
                      value: 4081234567
                      message: Phone number is already taken, please try another phone number
  /driver/reset/emailCode:
    get:
      description: Get an email verification code for reset password of a driver account
      tags:
      - Driver
      summary: Get an email code for reset password for a driver account
      parameters:
      - in: query
        name: email
        schema: 
          type: string
        required: true
      responses:
        '200':
          description: Email code sent
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Code sent to your email, it will expire in 5 mins
        '400':
          description: Invalid email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid email address format:
                  value:
                    code: 400
                    data:
                      field: email
                      value: abc.com
                      message: Invalid email address
                Driver account does not exist:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Driver account does not exist
                Email code already sent:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Code is already sent, please try again after 5 mins
        '500':
          description: Can not send out email, server error
  /driver/reset/password:
    patch:
      description: Reset driver account password
      tags:
      - Driver
      summary: Reset driver account password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reseted
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: Succeed
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Email verification code expired:
                  value: 
                    code: 400
                    data:
                      field: code
                      value: 123456
                      message: Email verification code is expired, please try to request a new one
                Wrong Email verification code:
                  value: 
                    code: 400
                    data:
                      field: code
                      value: 123456
                      message: Email verification code is wrong, please try again
                Driver account does not exist:
                  value:
                    code: 400
                    data:
                      field: email
                      value: steven.panxd@gmail.com
                      message: Driver account does not exist
  /driver/orders:
    get:
      description: Get driver history orders
      tags:
      - Driver
      summary: Get driver history orders
      parameters:
      - in: header
        name: access_token
        schema:
          type: string
          description: driver access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        required: true
      - in: query
        name: pageSize
        description: number of items per page
        schema: 
          type: number
        required: true
        example: 10
      - in: query
        name: page
        description: current page number
        required: true
        schema:
          type: number
        example: 1
      responses:
        '200':
          description: return driver history orders information
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GetDriverOrdersResponse'
        '400':
          description: invalid parameters
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                  Invalid page number:
                    value:
                      code: 400
                      data:
                        field: page
                        value: abc
                        message: Invalid page number
                  Invalid page size:
                    value:
                      code: 400
                      data:
                        field: pageSize
                        value: abc
                        message: Invalid page size
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              example:
                code: 401
                data: Please log in
  /driver/location:
    post:
      description: Update driver's real-time location when they want to recive new orders
      tags:
      - Driver
      summary: Update driver's real-time location
      parameters:
      - in: header
        name: access_token
        schema:
          type: string
          description: driver access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDriverLocationRequest'
      responses:
        '200':
          description: Email code sent
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: succeed
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                Invalid latitude:
                  value:
                    code: 400
                    data:
                      field: latitude
                      value: abc
                      message: invalid latitude
                Invalid longitude:
                  value:
                    code: 400
                    data:
                      field: longitude
                      value: abc
                      message: Invalid longitude
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              example:
                code: 401
                data: Please log in
    delete:
      description: Delete driver's real-time location when they don't want to recive new orders
      tags:
      - Driver
      summary: Delete driver's real-time location
      parameters:
      - in: header
        name: access_token
        schema:
          type: string
          description: driver access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        required: true
      responses:
        '200':
          description: Email code sent
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: succeed
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInvalidResponse'
              example:
                code: 401
                data: Please log in
  /common/upload/image:
    post:
      description: upload an image to the server
      summary: upload image
      tags:
      - Common
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Image uploaded successfully, return image url
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralResponse'
              example:
                code: 200
                data: "http://127.0.0.1:3000/common/file/1678647329659-683715332.jpg"
        '400':
          description: Image uploaded fail, return error message
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GeneralInvalidResponse'
              examples:
                No file uploaded:
                  value: 
                    code: 400
                    data:
                      field: image
                      value: null
                      message: No image file received
                Invalid file extension:
                  value: 
                    code: 400
                    data:
                      field: image
                      value: xxx.exe
                      message: Only .png, .jpg and .jpeg format allowed!

components:
  schemas:
    GeneralResponse:
      title: General valid response body
      type: object
      properties:
        code:
          type: number
          description: HTTP status code
          example: 200
        data:
          type: string
          description: response data or succeed message
          example: succeed
    GeneralInvalidResponse:
      title: General invalid parameter response body
      type: object
      properties:
        code:
          type: number
          description: HTTP status code
          example: 400
        data:
          type: object
          properties:
            field:
              type: string
              description: error field
            value:
              type: string
              description: backend received error value
            message:
              type: string
              description: error message
          example:
            field: email
            value: abc.com
            message: Invalid email address
    GetRestaurantProfileResponse:
      title: Restaurant profile response body
      type: object
      properties:
        code:
          type: number
          description: HTTP status code
          example: 200
        data:
          type: object
          properties:
            id:
              type: number
              description: restaurant account id
              example: 1
            email:
              type: string
              description: email address, unique
              example: steven.panxd@gmail.com
            phone:
              type: string
              description: phone number, unique
              example: 4081234567
            name:
              type: string
              description: restaurant name
              example: My Restaurant
            street:
              type: string
              description: restaurant street
              example: 1 Washington Square
            city:
              type: string
              description: restaurant city
              example: San Jose
            state:
              type: string
              description: restaurant state
              example: California
            zipCode:
              type: string
              description: restaurant zipCode
              example: 95192
            verification:
              type: string
              description: restaurant verification status
              example: NOTVERIFIED
            # latitude:
            #   type: number
            #   description: restaurant latitude
            #   example: 37.33482353097262
            # longitude:
            #   type: number
            #   description: restaurant longitude
            #   example: -121.88420310757643
    UpdateRestaurantProfileRequest:
      title: Restaurant account profile update request body
      type: object
      properties:
        phone:
          type: string
          description: phone number, unique
          example: 4081234567
        name:
          type: string
          description: restaurant name
          example: My Restaurant
        street:
          type: string
          description: restaurant street
          example: 1 Washington Square
        city:
          type: string
          description: restaurant city
          example: San Jose
        state:
          type: string
          description: restaurant state
          example: California
        zipCode:
          type: string
          description: restaurant zipCode
          example: 95192
        # latitude:
        #   type: number
        #   description: restaurant latitude
        #   example: 37.33482353097262
        # longitude:
        #   type: number
        #   description: restaurant longitude
        #   example: -121.88420310757643
    RestaurantLoginRequest:
      title: Restaurant account log in request body
      type: object
      properties:
        email:
          type: string
          description: email address
          example: steven.panxd@gmail.com
        password:
          type: string
          description: password, much be length >= 6, at least 1 uppercase letter, 1 lowercase letter, and 1 symbol
          example: A1b2c.
    RestaurantSignUpRequest:
      title: Restaurant account sign up request body
      type: object
      properties:
        email:
          type: string
          description: email address, unique
          example: steven.panxd@gmail.com
        code:
          type: string
          description: email verification code
          example: 123456
        password:
          type: string
          description: password, much be length >= 6, at least 1 uppercase letter, 1 lowercase letter, and 1 symbol
          example: A1b2c.
        phone:
          type: string
          description: phone number, unique
          example: 4081234567
        name:
          type: string
          description: restaurant name
          example: My Restaurant
        street:
          type: string
          description: restaurant street
          example: 1 Washington Square
        city:
          type: string
          description: restaurant city
          example: San Jose
        state:
          type: string
          description: restaurant state
          example: California
        zipCode:
          type: string
          description: restaurant zipCode
          example: 95192
        # latitude:
        #   type: number
        #   description: restaurant latitude
        #   example: 37.33482353097262
        # longitude:
        #   type: number
        #   description: restaurant longitude
        #   example: -121.88420310757643
      required:
        - email
        - code
        - password
        - phone
        - name
        - street
        - state
        - zipCode
        # - latitude
        # - longitude
    DriverLoginRequest:
      title: Driver account log in request body
      type: object
      properties:
        email:
          type: string
          description: email address
          example: steven.panxd@gmail.com
        password:
          type: string
          description: password, much be length >= 6, at least 1 uppercase letter, 1 lowercase letter, and 1 symbol
          example: A1b2c.
    DriverSignUpRequest:
      title: Driver account sign up request body
      type: object
      properties:
        email:
          type: string
          description: email address, unique
          example: steven.panxd@gmail.com
        code:
          type: string
          description: email verification code
          example: 123456
        password:
          type: string
          description: password, much be length >= 6, at least 1 uppercase letter, 1 lowercase letter, and 1 symbol
          example: A1b2c.
        phone:
          type: string
          description: phone number, unique
          example: 4081234567
        driverLicenseNumber:
          type: string
          description: driver license number
          example: Y1234567
        driverLicenseImage:
          type: string
          description: driver license image url
          example: https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png
        firstName:
          type: string
          description: driver's first name
          example: Steven
        lastName:
          type: string
          description: driver's last name
          example: Pan
        middleName:
          type: string
          description: driver's middle name
          example: null
        bankAccountNumber:
          type: string
          description: driver's bank account number
          example: 123456789
        bankRoutingNumber:
          type: string
          description: driver's bank routing number
          example: 123456789
      required:
        - email
        - code
        - password
        - phone
        - driverLicenseNumber
        - driverLicenseImage
        - firstName
        - lastName
        - bankAccountNumber
        - bankRoutingNumber
    GetDriverProfileResponse:
      title: Driver profile response body
      type: object
      properties:
        code:
          type: number
          description: HTTP status code
          example: 200
        data:
          type: object
          properties:
            id:
              type: number
              description: driver account id
              example: 1
            email:
              type: string
              description: email address, unique
              example: steven.panxd@gmail.com
            phone:
              type: string
              description: phone number, unique
              example: 4081234567
            driverLicenseNumber:
              type: string
              description: driver license number
              example: Y1234567
            driverLicenseImage:
              type: string
              description: driver license image url
              example: https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png
            firstName:
              type: string
              description: driver's first name
              example: Steven
            lastName:
              type: string
              description: driver's last name
              example: Pan
            middleName:
              type: string
              description: driver's middle name
              example: null
            bankAccountNumber:
              type: string
              description: driver's bank account number
              example: 123456789
            bankRoutingNumber:
              type: string
              description: driver's bank routing number
              example: 123456789
            verification:
              type: string
              description: restaurant verification status
              example: NOTVERIFIED
    UpdateDriverProfileRequest:
      title: Driver account profile update request body
      type: object
      properties:
        phone:
          type: string
          description: phone number, unique
          example: 4081234567
        driverLicenseNumber:
          type: string
          description: driver license number
          example: Y1234567
        driverLicenseImage:
          type: string
          description: driver license image url
          example: https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png
        firstName:
          type: string
          description: driver's first name
          example: Steven
        lastName:
          type: string
          description: driver's last name
          example: Pan
        middleName:
          type: string
          description: driver's middle name
          example: null
        bankAccountNumber:
          type: string
          description: driver's bank account number
          example: 123456789
        bankRoutingNumber:
          type: string
          description: driver's bank routing number
          example: 123456789
    ResetPasswordRequest:
      title: Restaurant/Driver account reset password request body
      type: object
      properties:
        email:
          type: string
          description: email address, unique
          example: steven.panxd@gmail.com
        code:
          type: string
          description: email verification code
          example: 123456
        password:
          type: string
          description: password, much be length >= 6, at least 1 uppercase letter, 1 lowercase letter, and 1 symbol
          example: A1b2c.
      required:
      - email
      - code
      - password
    GetRestaurantOrdersResponse:
      title: Restaurant history orders response body
      type: object
      properties:
        code:
          type: number
          description: HTTP status code
          example: 200
        data:
          type: object
          properties:
            data:
              type: array
              description: restaurant history orders data
              items:
                $ref: '#/components/schemas/RestaurantOrderSummary'
            totalPage:
              type: number
              description: total page count
              example: 1
            pageSize:
              type: number
              description: current page size
              example: 10
            page:
              type: number
              description: current page number
    RestaurantOrderSummary:
      description: history orders item object
      type: object
      properties:
        id: 
          type: integer
          example: 1
        createdAt:
          type: string
          example: "2023-03-22T10:00:00.000Z"
        estimatedDeliveryTime:
          type: string
          example: "2023-03-22T10:00:00.000Z"
        estimatedDeliveryCost:
          type: string
          example: "50.25"
        actualDeliveryTime:
          type: string
          example: "2023-03-22T10:00:00.000Z"
        actualDeliveryCost:
          type: string
          example: "50.25"
        status:
          type: string
          example: DELIVERED
        customerStreet: 
          type: string
          example: "One Apple Park Way"
        customerCity: 
          type: string
          example: "Cupertino"
        customerState:
          type: string
          example: "CA"
        customerZipCode:
          type: string
          example: "95014"
        customerName:
          type: string
          example: "Tim Cook"
        customerEmail:
          type: string
          example: "xd.cs157c@gmail.com"
        customerPhone:
          type: string
          example: "6691234567"
        driver:
          type: object
          properties:
            id:
              type: integer
              example: 1
            firstName:
              type: string
              example: Steven
            lastName:
              type: string
              example: Pan
            middleName:
              type: string
              example: null
            email:
              type: string
              example: stevenxpan@yahoo.com
            phone:
              type: string
              example: "4081234567"
    GetDriverOrdersResponse:
      title: Driver history orders response body
      type: object
      properties:
        code:
          type: number
          description: HTTP status code
          example: 200
        data:
          type: object
          properties:
            data:
              type: array
              description: driver history orders data
              items:
                $ref: '#/components/schemas/DriverOrderSummary'
            totalPage:
              type: number
              description: total page count
              example: 1
            pageSize:
              type: number
              description: current page size
              example: 10
            page:
              type: number
              description: current page number
    DriverOrderSummary:
      description: history orders item object
      type: object
      properties:
        id: 
          type: integer
          example: 1
        createdAt:
          type: string
          example: "2023-03-22T10:00:00.000Z"
        estimatedDeliveryTime:
          type: string
          example: "2023-03-22T10:00:00.000Z"
        estimatedDeliveryCost:
          type: string
          example: "50.25"
        actualDeliveryTime:
          type: string
          example: "2023-03-22T10:00:00.000Z"
        actualDeliveryCost:
          type: string
          example: "50.25"
        status:
          type: string
          example: DELIVERED
        customerStreet: 
          type: string
          example: "One Apple Park Way"
        customerCity: 
          type: string
          example: "Cupertino"
        customerState:
          type: string
          example: "CA"
        customerZipCode:
          type: string
          example: "95014"
        customerName:
          type: string
          example: "Tim Cook"
        customerEmail:
          type: string
          example: "xd.cs157c@gmail.com"
        customerPhone:
          type: string
          example: "6691234567"
        restaurant:
          type: object
          properties:
            id:
              type: number
              example: 1
            email:
              type: string
              example: steven.panxd@gmail.com
            phone:
              type: string
              example: "4081234567"
            name:
              type: string
              example: My Restaurant
            street:
              type: string
              example: 1 Washington Square
            city:
              type: string
              example: San Jose
            state:
              type: string
              example: California
            zipCode:
              type: string
              example: "95192"
    UpdateDriverLocationRequest:
      title: Driver real time location update request body
      type: object
      properties:
        latitude:
          type: number
          example: 37.33539903922244
        longitude:
          type: number
          example: -121.8806361280556
      required:
        - latitude
        - longitude
    RestaurantEstimateRequest:
      title: distance and duration estimation between restaurant and customer request
      type: object
      properties:
        street:
          type: string
          example: One Apple Park Way
        city:
          type: string
          example: Cupertino
        state:
          type: string
          example: CA
        zipCode:
          type: string
          example: 95014
      required:
        - street
        - city
        - state
        - zipCode
    RestaurantCreateOrderRequest:
      title: restaurant create order request
      type: object
      properties:
        customerStreet:
          type: string
          example: One Apple Park Way
        customerCity:
          type: string
          example: Cupertino
        customerState:
          type: string
          example: CA
        customerZipCode:
          type: string
          example: 95014
        customerEmail:
          type: string
          example: steven.panxd@gmail.com
        customerPhone:
          type: string
          example: 4081234567
        customerName:
          type: string
          example: Tim Cook
        comment:
          type: string
          example: Please leave at the front door
      required:
        - customerStreet
        - customerCity
        - customerState
        - customerZipCode
        - customerEmail
        - customerPhone
        - customerName
        - comment